/*
    est.pak - Embedded Security Transport (SSL) package for Bit
 */

pack('est', 'Embedded Security Transport (SSL)')

if (bit.packs.ssl && bit.packs.ssl.enable === false) {
    throw "SSL has been disabled"
}

/*
    Defer to other SSL if explicitly requested and EST not explicitly requested too
 */
let alternate, other
for each (name in ['openssl', 'matrixssl', 'mocana']) {
    if (bit.packs[name] && bit.packs[name].enable) {
        if (bit.packs[name].explicit) {
            alternate = true
            other = name
        } else {
            bit.packs[name].enable = false
            bit.packs[name].diagnostic = 'Defer SSL to EST, disabled'
        }
    }
}
if (alternate && !bit.packs.est.explicit) {
    throw "Disable EST. Defer to " + other + " SSL"
}

let path = bit.packs.est.path

let cfg
if (!Path('src/deps/est/estLib.c').exists) {
    throw "Cannot find src/deps/est/estLib.c"
}
let dir = bit.dir.src.join('src/deps/est')
cfg = {
    path: dir,
    dir: dir,
    includes: [ dir ],
    libraries: [ 'est' ]
}
Bit.load({packs: { est: cfg }})
bit.settings.ssl = true
