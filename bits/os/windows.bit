/*
    windows.bit -- Windows Settings
 */

Bit.load({
    ext: {
        exe:   'exe',
        lib:   'lib',
        o:     'obj',
        res:   'res',
        shlib: 'lib',
        shobj: 'dll',
    },

    /* 
        Prefixes are used when doing bit install 
     */
    prefixes: {
        /* programFiles may get (x86) at run-time if on a 64-bit system */
        programFiles:       'C:/Program Files',
        programFiles32:     'C:/Program Files',
        product:            'C:/Program Files/${settings.title}',
        productver:         '${prefixes.product}',
        config:             '${prefixes.product}',
        bin:                '${prefixes.product}/bin',
        inc:                '${prefixes.product}/inc',
        log:                '${prefixes.product}/logs',
        spool:              '${prefixes.product}/tmp',
        src:                '${prefixes.product}/src',
        web:                '${prefixes.product}/web',
        ubin:               '${prefixes.product}/bin',
        man:                '${prefixes.product}/man',
    },

    settings: {
        /* order matters */
        '+required': [ 'winsdk', 'compiler', 'lib', 'link', 'dumpbin', 'rc' ],
    },

    scripts: {
        onload: "
            if (bit.platform.arch == 'x86' && Config.CPU == 'x64') {
                /* 32 bit build on a 64 bit system */
                bit.prefixes.product = 'C:/Program Files (x86)/$${settings.title}'
            }
        ",
    },

    defaults: {
        '+compiler':  [ '-nologo', '-GR-', '-W3' ],
        //  TODO - remove _MT as -MDd and -MD define this
        '+defines':   [ '-D_REENTRANT', '-D_MT' ],
        '+entry':   {
            lib: '_DllMainCRTStartup@12',
            exe: 'mainCRTStartup',
            gui: 'WinMainCRTStartup',
        },
        '+libraries': [ 'ws2_32.lib', 'advapi32.lib', 'user32.lib', 'kernel32.lib', 'oldnames.lib', 'msvcrt.lib', 'shell32.lib' ],
        '+libpaths':  [ ],
        '+linker':    [
            '-nologo',
            '-nodefaultlib',
            '-incremental:no',
        ],
        scripts: {
            '+preblend': "
                //  Runs to update defaults.* before blending defaults into targets
                let defaults = bit.defaults
                let settings = bit.settings
                if (settings.preprocess) defaults.compiler += [ '-E' ]
                defaults.libpaths.push(bit.dir.lib)
                if (bit.settings.debug) {
                    defaults.defines.push('-DBIT_DEBUG')
                    defaults.compiler += [ '-Zi', '-Od', '-MDd' ]
                    defaults.linker += [ '-debug' ]
                } else {
                    defaults.compiler += [ '-O2', '-MD' ]
                }
                if ('${ARCH}' == 'x64') {
                    defaults.linker += ['-machine:x64']
                    defaults.entry.lib = '_DllMainCRTStartup'
                } else {
                    defaults.linker += ['-machine:x86']
                }
            ",
        },
    },

    rules: {
        'c->c':     '"${packs.compiler.path}" -E -Fd${PDB} ${CFLAGS} ${DEFINES} ${INCLUDES} ${PREPROCESS} ${IN}',
        'c->obj':   '"${packs.compiler.path}" -c -Fo${OUT} -Fd${PDB} ${CFLAGS} ${DEFINES} ${INCLUDES} ${PREPROCESS} ${IN}',
        'cpp->obj': '"${packs.compiler.path}" -c -Fo${OUT} -Fd${PDB} ${CFLAGS} ${DEFINES} ${INCLUDES} ${PREPROCESS} ${IN}',
        'shlib':    '"${packs.link.path}" -dll -out:${OUT} -entry:${ENTRY} ${LDFLAGS} ${LIBPATHS} ${IN} ${LIBS}',
        'lib':      '"${packs.lib.path}" -nologo -out:${OUT} ${IN}',
        'exe':      '"${packs.link.path}" -out:${OUT} -entry:${ENTRY} -subsystem:console ${LDFLAGS} ${LIBPATHS} ${IN} ${LIBS}',
        'gui':      '"${packs.link.path}" -out:${OUT} -entry:${ENTRY} -subsystem:Windows ${LDFLAGS} ${LIBPATHS} ${IN} ${LIBS}',
        'sym':      '"${packs.dumpbin.path}" /symbols ${IN}',
        'res':      '"${packs.rc.path}" -nologo -Fo ${OUT} ${IN}',
    },
})
