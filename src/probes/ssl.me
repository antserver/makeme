/*
    ssl.me - SSL support. This is the interface above SSL providers: est, matrixssl, nanossl, openssl
 */

Me.extension({
    ssl: {
        description: 'Secure Socket Layer Interface',
        discover: [ 'est', 'matrixssl', 'nanossl', 'openssl' ],
        depends:  [ 'est', 'matrixssl', 'nanossl', 'openssl' ],
        scripts: {
            config: function (extension) {
                let provider
                for each (p in extension.discover) {
                    if (me.extensions[p].enable && me.extensions[p].explicit) {
                        provider = p
                        break
                    }
                }
                for each (p in extension.discover) {
                    if (p == provider) {
                        continue
                    }
                    if (me.extensions[p] && me.extensions[p].enable && !provider) {
                        provider = p
                    } else if (provider) {
                        me.extensions[p].enable = false
                        me.extensions[p].diagnostic = 'Using the ' + provider + ' SSL provider instead.'
                    }
                }
                if (provider) {
                    let from = me.extensions[provider]
                    extension.provider = provider
                    for each (field in ['defines', 'includes', 'libraries', 'libpaths', 'imports']) {
                        if (from[field]) {
                            extension[field] = from[field]
                        }
                    }
                    extension.description += ' (' + me.extensions[provider].description + ')'

                } else {
                    throw "No enabled SSL providers"
                }
            },
            without: function(extension) {
                for each (p in extension.discover) {
                    me.extensions[p].enable = false
                    me.extensions[p].diagnostic = 'configured --without ssl'
                }
            },
        },
    },
})
