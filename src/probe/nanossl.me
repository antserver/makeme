/*
    nanossl.me -- Mocana NanoSSL probe
 */

Me.extension({
    nanossl: {
        description: 'Mocana NanoSSL',
        generate: function (extension) {
            extension.path = '/usr/src/nanossl'
            extension.libraries = [ 'ssls' ]
            extension.libpaths = [ '$(ME_EXT_NANOSSL_PATH)/bin' ]
            extension.includes = [ '$(ME_EXT_NANOSSL_PATH)/src' ]
        },
        path: function (extension) {
            let path: Path? = extension.withpath
            if (!path) {
                if (me.dir.paks) {
                    path = me.dir.paks.join('nanossl')
                }
                if (!path.exists) {
                    path = App.dir.join('../packages-' + me.platform.os + '-' + me.platform.arch, 'nanossl/latest')
                }
            }
            let search = [ path.join('bin') ]
            let lib = probe('libssls.' + me.ext.lib, {fullpath: true, search: search}).absolute
            extension.libpaths = [ lib.parent ]
            extension.libraries = [ 'ssls' ]
            extension.imports = [ lib ]

            let incdir = probe('common/moptions.h', {search: [path.join('src')]}).absolute
            extension.includes = [ incdir ]
            return path
        },
        extensions: [ 'ssl' ],
        conflicts: [ 'est', 'matrixssl', 'openssl' ],
    },
})
