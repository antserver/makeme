/*
    certs.me -- Test certificate generation
 
    This file provides targets to help you get going with SSL (using OpenSSL). 
    WARNING: All these certificates are for internal use only.

    To generate a certificate request to send to a certificate authority like Verisign, do:
    This will create a certificate request file in "server.csr" and a private key in "server.key"

        me cert-request
 
    To use appweb with HTTP, you need a server certificate. 
    This command will generate a self-signed test certificate called "self.crt" with a private key "self.key".
 
        me self-signed-cert
 
    To create a CA and then a server cert based on this CA.
    This command will generate a CA certificate in ca.crt with a CA private key in ca.key. The last minted certificate
    serial number is in ca.srl.
 
        me ca-cert

    To generate a certificate signed by the test CA.
    This will generate a certificate in "test.crt" with a private key in "test.key".

        me test-cert

    For all cert targets:

        me test-certs
 */

Me.load({
    targets: {
        postcache: {
            depends: [ 'test-certs' ],
        },

        'test-certs': {
            depends: [ 'ca-cert', 'self-signed-cert', 'test-cert', 'get-roots' ],
        },

        'get-roots': {
            action: `
                let http = Http()
                http.verify = false
                http.get('https://raw.githubusercontent.com/bagder/ca-bundle/master/ca-bundle.crt')
                Path('roots.crt').write(http.response)
            `
        }

        /*
            WARNING: Self-signed server certificate for testing ONLY.
            Use a self-signed certificate when you just want quick and dirty testing.
            The browser will say it doesn't recognize this certificate, but that is ok for testing only.
            Creates a private key in self.key.

            See: http://www.sslshopper.com/article-most-common-openssl-commands.html
         */
        'self-signed-cert': {
            message: [ 'Make', 'Self-signed Certificate', 'self.crt' ],
            shell: `
                ossl genrsa -out self.key 2048
                ossl req -new -x509 -days 3650 -key self.key -out self.crt < self.ans
            `,
        },

        /*
             Setup a test certificate authority. Use this if you will be generating multiple certificates for clients and 
             servers.  NOTE: this is only for test. The certificate authority is not a real entity!
         */
        'ca-cert': {
            message: [ 'Make', 'CA Certificate', 'ca.crt' ],
            shell: `
                ossl genrsa -out ca.key 2048
                ossl req -config openssl.conf -new -x509 -days 3650 -key ca.key -out ca.crt -extensions caExtensions
                echo '01' >ca.srl
                >ca.db
            `,
        },

        /*
            Test cert signed by the test CA above. This is used for test as the server cert and on the client side
            when validating client certs.
         */
        'test-cert': {
            message: [ 'Make', 'Test Certificate', 'test.crt' ],
            shell: `
                ossl genrsa -out test.key 2048
                ossl req -new -key test.key -out test.csr < test.ans
                # ossl x509 -extfile openssl.conf -req -days 3650 -in test.csr -CA ca.crt -CAkey ca.key -out test.crt
                ossl ca -batch -config openssl.conf -in test.csr -out test.crt -extensions server
                # ossl x509 -in test.crt -noout -text
                rm -f *.old 01.pem
            `,
        },

        /*
            Generate a certificate request to send to a certificate authority like Verisign
            Generates a server key in "server.key"
         */
        'cert-request': {
            shell: `
                ossl genrsa -out server.key 2048
                ossl req -new -key server.key -out server.csr < test.ans
            `,
        },

        'show-certs': {
            shell: `
                ossl x509 -in ca.crt -noout -text
                ossl x509 -in test.crt -noout -text
                ossl x509 -in self.crt -noout -text
            `
        }
    },
})
