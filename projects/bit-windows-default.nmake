#
#   bit-windows-default.nmake -- Makefile to build Embedthis Bit for windows
#

PRODUCT         = bit
VERSION         = 0.8.0
BUILD_NUMBER    = 0
PROFILE   = default
PA        = $(PROCESSOR_ARCHITECTURE)
!IF "$(PA)" == "AMD64"
ARCH     = x64
ENTRY    = _DllMainCRTStartup
!ELSE
ARCH     = x86
ENTRY    = _DllMainCRTStartup@12
!ENDIF

OS       = windows
CONFIG   = $(OS)-$(ARCH)-$(PROFILE)
CC       = cl
LD       = link
RC       = rc
CFLAGS   = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS   = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS   = -I$(CONFIG)\inc
LDFLAGS  = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS = -libpath:$(CONFIG)\bin
LIBS     = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_PRD_PREFIX  = C:/Program Files/Embedthis Bit
BIT_VER_PREFIX  = $(BIT_PRD_PREFIX)
BIT_CFG_PREFIX  = $(BIT_PRD_PREFIX)
BIT_BIN_PREFIX  = $(BIT_PRD_PREFIX)/bin
BIT_INC_PREFIX  = $(BIT_PRD_PREFIX)/inc
BIT_LOG_PREFIX  = $(BIT_PRD_PREFIX)/logs
BIT_SPL_PREFIX  = $(BIT_PRD_PREFIX)/tmp
BIT_SRC_PREFIX  = $(BIT_PRD_PREFIX)/src
BIT_WEB_PREFIX  = $(BIT_PRD_PREFIX)/web
BIT_UBIN_PREFIX = $(BIT_PRD_PREFIX)/bin
BIT_MAN_PREFIX  = $(BIT_PRD_PREFIX)/man

all compile: prep \
        $(CONFIG)\bin\ca.crt \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libmprssl.dll \
        $(CONFIG)\bin\makerom.exe \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\bin\http.exe \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\bin\ejs.exe \
        $(CONFIG)\bin\ejsc.exe \
        $(CONFIG)\bin\ejs.mod \
        $(CONFIG)\bin\removeFiles.exe \
        $(CONFIG)\bin\bit.es \
        $(CONFIG)\bin\bit.exe \
        $(CONFIG)\bin\bits

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_PRD_PREFIX)" == ""
	echo "BIT_PRD_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\bit-$(OS)-$(PROFILE)-bit.h $(CONFIG)\inc\bit.h
	@echo $(DFLAGS) $(CFLAGS) >projects/.flags

clean:
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	-if exist $(CONFIG)\bin\libmpr.dll del /Q $(CONFIG)\bin\libmpr.dll
	-if exist $(CONFIG)\bin\libmprssl.dll del /Q $(CONFIG)\bin\libmprssl.dll
	-if exist $(CONFIG)\bin\makerom.exe del /Q $(CONFIG)\bin\makerom.exe
	-if exist $(CONFIG)\bin\libpcre.dll del /Q $(CONFIG)\bin\libpcre.dll
	-if exist $(CONFIG)\bin\libhttp.dll del /Q $(CONFIG)\bin\libhttp.dll
	-if exist $(CONFIG)\bin\http.exe del /Q $(CONFIG)\bin\http.exe
	-if exist $(CONFIG)\bin\libejs.dll del /Q $(CONFIG)\bin\libejs.dll
	-if exist $(CONFIG)\bin\ejs.exe del /Q $(CONFIG)\bin\ejs.exe
	-if exist $(CONFIG)\bin\ejsc.exe del /Q $(CONFIG)\bin\ejsc.exe
	-if exist $(CONFIG)\bin\ejs.mod del /Q $(CONFIG)\bin\ejs.mod
	-if exist $(CONFIG)\bin\removeFiles.exe del /Q $(CONFIG)\bin\removeFiles.exe
	-if exist $(CONFIG)\obj\estLib.obj del /Q $(CONFIG)\obj\estLib.obj
	-if exist $(CONFIG)\obj\mprLib.obj del /Q $(CONFIG)\obj\mprLib.obj
	-if exist $(CONFIG)\obj\mprSsl.obj del /Q $(CONFIG)\obj\mprSsl.obj
	-if exist $(CONFIG)\obj\manager.obj del /Q $(CONFIG)\obj\manager.obj
	-if exist $(CONFIG)\obj\makerom.obj del /Q $(CONFIG)\obj\makerom.obj
	-if exist $(CONFIG)\obj\pcre.obj del /Q $(CONFIG)\obj\pcre.obj
	-if exist $(CONFIG)\obj\httpLib.obj del /Q $(CONFIG)\obj\httpLib.obj
	-if exist $(CONFIG)\obj\http.obj del /Q $(CONFIG)\obj\http.obj
	-if exist $(CONFIG)\obj\ejsLib.obj del /Q $(CONFIG)\obj\ejsLib.obj
	-if exist $(CONFIG)\obj\ejs.obj del /Q $(CONFIG)\obj\ejs.obj
	-if exist $(CONFIG)\obj\ejsc.obj del /Q $(CONFIG)\obj\ejsc.obj
	-if exist $(CONFIG)\obj\removeFiles.obj del /Q $(CONFIG)\obj\removeFiles.obj
	-if exist $(CONFIG)\obj\bit.obj del /Q $(CONFIG)\obj\bit.obj

$(CONFIG)\bin\ca.crt: src/deps/est/ca.crt
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	copy /Y src\deps\est\ca.crt $(CONFIG)\bin\ca.crt

$(CONFIG)\inc\mpr.h: 
	-if exist $(CONFIG)\inc\mpr.h del /Q $(CONFIG)\inc\mpr.h
	copy /Y src\deps\mpr\mpr.h $(CONFIG)\inc\mpr.h

$(CONFIG)\inc\bitos.h: 
	-if exist $(CONFIG)\inc\bitos.h del /Q $(CONFIG)\inc\bitos.h
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\mprLib.obj: \
        src\deps\mpr\mprLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\mpr\mprLib.c

$(CONFIG)\bin\libmpr.dll:  \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\obj\mprLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprLib.obj $(LIBS)

$(CONFIG)\inc\est.h: 
	-if exist $(CONFIG)\inc\est.h del /Q $(CONFIG)\inc\est.h
	copy /Y src\deps\est\est.h $(CONFIG)\inc\est.h

$(CONFIG)\obj\mprSsl.obj: \
        src\deps\mpr\mprSsl.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\mpr\mprSsl.c

$(CONFIG)\bin\libmprssl.dll:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\obj\mprSsl.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprSsl.obj libmpr.lib $(LIBS)

$(CONFIG)\obj\makerom.obj: \
        src\deps\mpr\makerom.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\makerom.obj -Fd$(CONFIG)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\mpr\makerom.c

$(CONFIG)\bin\makerom.exe:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\obj\makerom.obj
	"$(LD)" -out:$(CONFIG)\bin\makerom.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\makerom.obj libmpr.lib $(LIBS)

$(CONFIG)\inc\pcre.h: 
	-if exist $(CONFIG)\inc\pcre.h del /Q $(CONFIG)\inc\pcre.h
	copy /Y src\deps\pcre\pcre.h $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
        src\deps\pcre\pcre.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\pcre\pcre.c

$(CONFIG)\bin\libpcre.dll:  \
        $(CONFIG)\inc\pcre.h \
        $(CONFIG)\obj\pcre.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\pcre.obj $(LIBS)

$(CONFIG)\inc\http.h: 
	-if exist $(CONFIG)\inc\http.h del /Q $(CONFIG)\inc\http.h
	copy /Y src\deps\http\http.h $(CONFIG)\inc\http.h

$(CONFIG)\obj\httpLib.obj: \
        src\deps\http\httpLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\http\httpLib.c

$(CONFIG)\bin\libhttp.dll:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\obj\httpLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\httpLib.obj libpcre.lib libmpr.lib $(LIBS)

$(CONFIG)\obj\http.obj: \
        src\deps\http\http.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\http.h
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\http\http.c

$(CONFIG)\bin\http.exe:  \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\obj\http.obj
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\http.obj libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\inc\ejs.h: 
	-if exist $(CONFIG)\inc\ejs.h del /Q $(CONFIG)\inc\ejs.h
	copy /Y src\deps\ejs\ejs.h $(CONFIG)\inc\ejs.h

$(CONFIG)\inc\ejs.slots.h: 
	-if exist $(CONFIG)\inc\ejs.slots.h del /Q $(CONFIG)\inc\ejs.slots.h
	copy /Y src\deps\ejs\ejs.slots.h $(CONFIG)\inc\ejs.slots.h

$(CONFIG)\inc\ejsByteGoto.h: 
	-if exist $(CONFIG)\inc\ejsByteGoto.h del /Q $(CONFIG)\inc\ejsByteGoto.h
	copy /Y src\deps\ejs\ejsByteGoto.h $(CONFIG)\inc\ejsByteGoto.h

$(CONFIG)\obj\ejsLib.obj: \
        src\deps\ejs\ejsLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\pcre.h \
        $(CONFIG)\inc\bitos.h \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\inc\ejs.slots.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsLib.obj -Fd$(CONFIG)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\ejs\ejsLib.c

$(CONFIG)\bin\libejs.dll:  \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\inc\ejs.h \
        $(CONFIG)\inc\ejs.slots.h \
        $(CONFIG)\inc\ejsByteGoto.h \
        $(CONFIG)\obj\ejsLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsLib.obj libmpr.lib libpcre.lib libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\obj\ejs.obj: \
        src\deps\ejs\ejs.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejs.obj -Fd$(CONFIG)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\ejs\ejs.c

$(CONFIG)\bin\ejs.exe:  \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\obj\ejs.obj
	"$(LD)" -out:$(CONFIG)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejs.obj libejs.lib $(LIBS) libmpr.lib libpcre.lib libhttp.lib

$(CONFIG)\obj\ejsc.obj: \
        src\deps\ejs\ejsc.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsc.obj -Fd$(CONFIG)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\ejs\ejsc.c

$(CONFIG)\bin\ejsc.exe:  \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\obj\ejsc.obj
	"$(LD)" -out:$(CONFIG)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsc.obj libejs.lib $(LIBS) libmpr.lib libpcre.lib libhttp.lib

$(CONFIG)\bin\ejs.mod:  \
        $(CONFIG)\bin\ejsc.exe
	cd src\deps\ejs
	"..\..\..\$(CONFIG)\bin\ejsc" --out "..\..\..\$(CONFIG)\bin\ejs.mod" --optimize 9 --bind --require null "ejs.es"
	cd ..\..\..

$(CONFIG)\obj\removeFiles.obj: \
        package\windows\removeFiles.c \
        $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc package\windows\removeFiles.c

$(CONFIG)\bin\removeFiles.exe:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\obj\removeFiles.obj
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\removeFiles.obj libmpr.lib $(LIBS)

$(CONFIG)\bin\bit.es: src/bit.es
	-if exist $(CONFIG)\bin\bit.es del /Q $(CONFIG)\bin\bit.es
	copy /Y src\bit.es $(CONFIG)\bin\bit.es

$(CONFIG)\bin\bits: 
	if exist ".\$(CONFIG)\bin\bits" rd /Q /S ".\$(CONFIG)\bin\bits"
	if not exist ".\$(CONFIG)\bin\bits" md ".\$(CONFIG)\bin\bits"
	xcopy /S /Y "bits" ".\$(CONFIG)\bin\bits"

$(CONFIG)\obj\bit.obj: \
        src\bit.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\bit.obj -Fd$(CONFIG)\obj\bit.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\bit.c

$(CONFIG)\bin\bit.exe:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\bin\bits \
        $(CONFIG)\bin\bit.es \
        $(CONFIG)\inc\bitos.h \
        $(CONFIG)\obj\bit.obj
	"$(LD)" -out:$(CONFIG)\bin\bit.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\bit.obj $(CONFIG)\obj\mprLib.obj $(CONFIG)\obj\pcre.obj $(CONFIG)\obj\httpLib.obj $(CONFIG)\obj\ejsLib.obj $(LIBS)

version: 
	cd bits
	@echo 0.8.0-0
	cd ..

install:  \
        compile
	xcopy /I /S /Y /Q $(CONFIG)\bin "$(BIT_BIN_PREFIX)"
	del /Q "$(BIT_BIN_PREFIX)\*.pdb"
	del /Q "$(BIT_BIN_PREFIX)\*.exp"
	del /Q "$(BIT_BIN_PREFIX)\*.lib"
	del /Q "$(BIT_BIN_PREFIX)\sqlite.*"
	del /Q "$(BIT_BIN_PREFIX)\makerom.*"
	del /Q "$(BIT_BIN_PREFIX)\ejsc.*"
	del /Q "$(BIT_BIN_PREFIX)\ejs.*"
	del /Q "$(BIT_BIN_PREFIX)\http.*"

uninstall: 
	if exist "$(BIT_PRD_PREFIX)" rd /Q /S "$(BIT_PRD_PREFIX)"

