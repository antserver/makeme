/*
    main.me -- Main MakeMe file
 */

Me.load({
    plugins: [ 'configuration', 'installs' ],

    blend: [
        'ejs',
        'src/*/*.me',
        'doc/doc.me',
    ],

    configure: {
        requires:  [ 'osdep', 'ejs', 'mpr', 'http', 'pcre', 'zlib' ],
        discovers: [ 'ssl' ],
    },

    customize: [
        /*
            The optional custom.me file is loaded after main.me is fully processed. It can
            thus override any setting. Feel free to create and customize.
         */
        'custom.me',
    ],

    settings: {
        platforms: [ 'local' ],
        tune: 'size',
        integrate: true,

        ejs: {
            /*
                Control if ejs.* is enabled or disabled
             */
            db: true,
            mail: true,
            mapper: true,
            shell: true,
            tar: true,
            template: true,
            web: true,
            zlib: true,
        },

        /*
            EST SSL stack configuration
         */
        est: {
            camellia: false,
            padlock: false,
            sslClient: false,
            des: false,
            testCerts: false,
            xtea: false,
            romTables: false,
            genPrime: false,
        },

        http: {
            /* Use PAM (Plugable Authentication Module) to store passwords */
            pam: false,
        },

        mpr: {
            /*
                Enable logging via mprLog to the log file. Error messages are always enabled.
                The default is to enable logging for both debug and release builds.
             */
            logging: true,
        },

        tune: 'speed',

        prefixes: 'install-prefixes',
        manifest: 'installs/manifest.me',
    },

    targets: {
        init: {
            first: true,
            path: 'init',
            'generate-make': `
                if [ ! -d /usr/include/openssl ] ; then echo
                    echo Install libssl-dev to get /usr/include/openssl
                    exit 255
                fi
            `,
            action: ' ',
            enable: "me.platform.os == 'linux'",
        },
        'me.mod': {
            path: '${BIN}/me.mod',
            files: [ 'src/*.es', 'paks/ejs-version/Version.es' ],
            precious: true,
            build: `
                run('"${LBIN}/ejsc" --debug --out "${BIN}/me.mod" --optimize 9 ${FILES}')
            `,
            message: 'Compile: me.mod',
            depends: [ 'ejs.mod' ],
        },

        me: {
            type: 'exe',
            path: '${BIN}/me${EXE}',
            sources: [ 'src/*.c' ],
            active: true,
            precious: true,
            depends: [ 'libmpr', 'libhttp', 'libejs', 'me.mod', 'runtime' ],
        },

        pakrun: {
            type: 'file',
            path: '${BIN}/',
            files: 'paks/me-*/**',
            flatten: false,
            precious: true,
        },

        runtime: {
            type: 'file',
            path: '${BIN}/',
            home: 'src',
            files: '*.me',
            precious: true,
            depends: [ 'pakrun' ],
        },

        projects: {
            action: `
                genProjects('--with openssl', 'default', ['freebsd-x86', 'linux-x86', 'macosx-x64', 'windows-x86'])
            `,
        },

        mine: {
            action: `
                genProjects('', 'mine', Config.OS + '-' + Config.CPU)`,
        },
    },
})
